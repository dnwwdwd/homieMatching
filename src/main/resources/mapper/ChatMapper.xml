<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hjj.homieMatching.mapper.ChatMapper">

    <resultMap id="BaseResultMap" type="com.hjj.homieMatching.model.domain.Chat">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="fromId" column="fromId" jdbcType="BIGINT"/>
            <result property="toId" column="toId" jdbcType="BIGINT"/>
            <result property="text" column="text" jdbcType="VARCHAR"/>
            <result property="chatType" column="chatType" jdbcType="TINYINT"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="teamId" column="teamId" jdbcType="BIGINT"/>
            <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,fromId,toId,
        text,chatType,createTime,
        updateTime,teamId,isDelete
    </sql>

    <select id="getLastPrivateChatMessages" resultType="com.hjj.homieMatching.model.domain.Chat">
        SELECT c.*
        FROM hjj.chat c
        JOIN (
        SELECT MAX(id) AS max_id
        FROM hjj.chat
        WHERE isDelete = 0
        AND (fromId = #{userId} OR toId = #{userId})
        AND toId IN
        <foreach item="friendId" collection="friendIdList" open="(" separator="," close=")">
            #{friendId}
        </foreach>
        GROUP BY toId
        ) AS max_ids ON c.id = max_ids.max_id AND (c.fromId = #{userId} OR c.toId = #{userId})
        order by createTime desc;
    </select>
</mapper>
